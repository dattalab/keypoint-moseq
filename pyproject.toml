[build-system]
build-backend = "setuptools.build_meta"

requires = [ "setuptools>=45", "setuptools-scm[toml]>=6.2", "versioneer[toml]==0.29", "wheel" ]

[project]
name = "keypoint-moseq"
description = "Unsupervised machine learning method for behavior analysis using keypoint tracking data"
readme = "README.md"
keywords = [ "behavior", "keypoint-tracking", "machine-learning", "motion-sequencing", "neuroscience" ]
license = { text = "Non-Commercial Research and Academic Use - see LICENSE.md" }
maintainers = [
  { name = "Caleb Weinreb", email = "calebsw@gmail.com" },
]
authors = [
  { name = "Caleb Weinreb", email = "calebsw@gmail.com" },
]
requires-python = ">=3.10"
classifiers = [
  "Intended Audience :: Science/Research",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Bio-Informatics",
]

dynamic = [ "version" ]
# Core dependencies from setup.cfg
dependencies = [
  "bokeh>=2.4.3,<3.9",                    # Tested: 2.4.3-3.8.0
  "commentjson",
  "cytoolz",
  "holoviews[recommended]>=1.15.4,<1.22", # Tested: 1.15.4-1.21.0
  "imageio[ffmpeg]",
  "ipykernel",
  "ipympl",
  "ipython-genutils",
  "ipywidgets",
  "jax>=0.4.20,<0.7",                     # Upper for tf probability 0.25.0
  "jax-moseq",
  "matplotlib>=3,<4",                     # Tested: 3.0.3-3.10
  "ndx-pose",
  "networkx",
  "numpy<=1.26.4",                        # Upper bound for jax compatibility
  "packaging",                            # For version comparison
  "pandas",
  "panel>=0.14.4,<1.9",                   # Tested: 0.14.4-1.8.2
  "plotly",
  "pynwb",
  "pyyaml",
  "seaborn>=0.8,<1",                      # Tested: 0.8.1-0.13.2
  "sleap-io",
  "statsmodels",
  "tables",
  "tabulate",
  "tqdm",
  "vidio",
]

# All optional dependencies
optional-dependencies.all = [
  "keypoint-moseq[dev,cuda,test]",
]
# CUDA support for GPU acceleration
optional-dependencies.cuda = [
  "jax-moseq[cuda]",
]
# Development and documentation dependencies
optional-dependencies.dev = [
  "autodocsumm",
  "myst-nb",
  "sphinx",
  "sphinx-rtd-theme",
]
# Testing dependencies
optional-dependencies.test = [
  "gdown",               # For downloading test data from Google Drive
  "h5py>=3",             # For HDF5 validation
  "jupytext>=1.14",
  "pytest>=7",
  "pytest-cov>=4",
  "pytest-timeout>=2.1",
  "pytest-xdist>=3",     # Parallel test execution
]
urls."Bug Tracker" = "https://github.com/dattalab/keypoint-moseq/issues"
urls.Documentation = "https://keypoint-moseq.readthedocs.io/en/latest/"
urls.Homepage = "https://github.com/dattalab/keypoint-moseq"
urls."Paper" = "https://www.nature.com/articles/s41592-024-02318-2"
urls.Repository = "https://github.com/dattalab/keypoint-moseq"

[tool.setuptools]
packages = [ "keypoint_moseq" ]
include-package-data = true

[tool.setuptools.package-data]
"*" = [ "*.md" ]

[tool.pytest.ini_options]
testpaths = [ "tests" ]
python_files = [ "test_*.py" ]
python_classes = [ "Test*" ]
python_functions = [ "test_*" ]
addopts = [
  "-v",                        # Verbose output
  "--cov=keypoint_moseq",
  "--cov-report=term-missing",
  "--cov-report=html",
]
timeout = 2700 # 45 minutes per test
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "integration: marks tests as integration tests",
  "notebook: marks tests derived from notebooks",
  "quick: marks tests as quick (< 1 minute)",
  "medium: marks tests as medium duration (1-5 minutes)",
]
# Custom CLI options can be added via conftest.py for --no-teardown

[tool.coverage.run]
source = [ "keypoint_moseq" ]
omit = [
  "keypoint_moseq/_version.py", # Auto-generated by versioneer
  "*/tests/*",                  # Exclude test files from coverage
  "*/test_*.py",                # Exclude test files
]

[tool.coverage.report]
# Minimum coverage threshold (fails if coverage drops below this)
fail_under = 40
# Don't report files with 100% coverage to focus on gaps
skip_covered = false
# Show lines that weren't executed
show_missing = true
# Exclude lines from coverage (e.g., defensive code, debugging)
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "if typing.TYPE_CHECKING:",
]

[tool.coverage.html]
# Directory for HTML coverage report
directory = "htmlcov"

[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "keypoint_moseq/_version.py"
versionfile_build = "keypoint_moseq/_version.py"
tag_prefix = ""
parentdir_prefix = ""
